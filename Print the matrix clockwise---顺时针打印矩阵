/*
对于一个矩阵，请设计一个算法从左上角(mat[0][0])开始，顺时针打印矩阵元素。
给定int矩阵mat,以及它的维数nxm，请返回一个数组，数组中的元素为矩阵元素的顺时针输出。
*/
class Printer {
public:
    vector<int> clockwisePrint(vector<vector<int> > mat, int n, int m) {
        // write code here
        vector<int> v;
        int x1 = 0;
        int y1 = 0;//起始坐标
        int x2 = n - 1;
        int y2 = m - 1;//终点坐标
        while(x1 <= x2 && y1 <= y2)
        {
            for(int j = y1; j <= y2; ++j)//第一行
            {
                v.push_back(mat[x1][j]);
            }
            for(int i = x1 + 1; i < x2; ++i)//i < x2 防止越界
            {                           //最后竖行
                v.push_back(mat[i][y2]);
            }
            for(int j = y2; x1 < x2 && j >= y1; --j)//不是单行情况（即不是最后一行）
            {                           //最后一行
                v.push_back(mat[x2][j]);
            }
            for(int i = x2 - 1; y1 < y2 && i > x1; --i)
            {
                v.push_back(mat[i][y1]);
            }
            x1++;   y1++;
            x2--;   y2--;
        }
        return v;
    }
};
